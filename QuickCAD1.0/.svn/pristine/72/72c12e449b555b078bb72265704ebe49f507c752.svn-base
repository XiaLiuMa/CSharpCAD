using System.Collections.Concurrent;

namespace Max.ISolator.Core
{
    /// <summary>
    /// 同步助手
    /// </summary>
    public interface IIsolator
    {
        /// <summary>
        /// 待生产的文件集
        /// </summary>
        ConcurrentBag<string> WaitProduceFiles { get; set; }
        /// <summary>
        /// 正在生产的文件集(队列：先入先出)
        /// </summary>
        ConcurrentQueue<string> ProducingFiles { get; set; }
        /// <summary>
        /// 待消费的文件集
        /// </summary>
        ConcurrentBag<string> WaitConsumeFiles { get; set; }
        /// <summary>
        /// 正在消费的文件集(队列：先入先出)
        /// </summary>
        ConcurrentQueue<string> ConsumingFiles { get; set; }

        /// <summary>
        /// 生产数据
        /// </summary>
        /// <param name="data"></param>
        void ProduceData(IsolatorData data);
        /// <summary>
        /// 消费数据
        /// </summary>
        /// <param name="data"></param>
        void ConsumeData(IsolatorData data);
    }
}
