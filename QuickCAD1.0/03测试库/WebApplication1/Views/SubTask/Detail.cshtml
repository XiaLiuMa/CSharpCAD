<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>子任务Deail</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link rel="stylesheet" href="/lib/layui-v2.9.2/css/layui.css" media="all">
    <link rel="stylesheet" href="/css/public.css" media="all">
    <style>
        body {
            background-color: #ffffff;
        }
    </style>
</head>
<body>
    <div class="layui-form layuimini-form">
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">命令码</label>
            <div class="layui-input-block">
                <input id="cmd" name="cmd" type="text" placeholder="请输入命令码" value="" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">任务名称</label>
            <div class="layui-input-block">
                <input id="taskName" name="taskName" type="text" placeholder="任务名称" value="" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">任务描述</label>
            <div class="layui-input-block">
                <input id="taskDes" name="taskDes" type="text" placeholder="任务描述" value="" class="layui-input">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label required">任务类型</label>
            <div class="layui-input-block">
                <select id="taskType" name="taskType" lay-verify="required" lay-search="">
                    <option value="">直接选择或搜索选择</option>
                    <option value="AJCJob">全表类基础任务</option>
                    <option value="CCGJob">区间类常规任务</option>
                    <option value="CDKJob">区间类大库任务</option>
                    <option value="TCGJob">统计类常规任务</option>
                    <option value="TDKJob">统计类大库任务</option>
                </select>
                <div class="layui-form-select">
                    <div class="layui-select-title">
                        <input id="dbType1" type="text" placeholder="直接选择或搜索选择" value="" class="layui-input"><i class="layui-edge"></i>
                    </div>
                    <dl id="dbType2" class="layui-anim layui-anim-upbit" style="">
                        <dd lay-value="" class="layui-select-tips layui-this">直接选择或搜索选择</dd>
                        <dd lay-value="AJCJob" class="">全表类基础任务</dd>
                        <dd lay-value="CCGJob" class="">区间类常规任务</dd>
                        <dd lay-value="CDKJob" class="">区间类大库任务</dd>
                        <dd lay-value="TCGJob" class="">统计类常规任务</dd>
                        <dd lay-value="TDKJob" class="">统计类大库任务</dd>
                    </dl>
                </div>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label required">任务优先级</label>
            <div class="layui-input-block">
                <input id="priorityLevel" name="priorityLevel" type="number" autocomplete="off" class="layui-input" min="1" step="1" lay-affix="number">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label required">切片类型</label>
            <div class="layui-input-block">
                <input type="checkbox" name="cutType" value="Y" lay-skin="tag" title="按年拆分">
                <input type="checkbox" name="cutType" value="M" lay-skin="tag" title="按月拆分">
                <input type="checkbox" name="cutType" value="D" lay-skin="tag" title="按日拆分" checked>
                <input type="checkbox" name="cutType" value="H" lay-skin="tag" title="按小时拆分">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label required">操作类型</label>
            <div class="layui-input-block">
                <input type="radio" name="czType" value="R" title="更新" checked>
                <input type="radio" name="czType" value="D" title="删除" disabled>
                <input type="radio" name="czType" value="DR" title="先删除再更新">
            </div>
        </div>
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">启用状态</label>
            <div class="layui-input-block">
                <input type="checkbox" name="taskState" lay-skin="switch" lay-filter="switchTest" title="true|false">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label required">延迟时长</label>
            <div class="layui-input-block">
                <input id="delayTime" name="delayTime" type="number" autocomplete="off" class="layui-input" min="0" step="1" lay-affix="number">
            </div>
        </div>
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">网闸</label>
            <div class="layui-input-block">
                <div id="wz_transfer" name="wzs" class="layui-transfer"></div>
            </div>
        </div>
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">串口</label>
            <div class="layui-input-block">
                <div id="ck_transfer" name="cks" class="layui-transfer"></div>
            </div>
        </div>
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">串口服务器</label>
            <div class="layui-input-block">
                <div id="ckfwq_transfer" name="ckfwqs" class="layui-transfer"></div>
            </div>
        </div>
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">关联数据库</label>
            <div class="layui-input-block">
                <div id="dbs_transfer" name="dbs" class="layui-transfer"></div>
            </div>
        </div>
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">SQL语句</label>
            <div class="layui-input-block">
                <textarea id="sqlStr" name="sqlStr" class="layui-textarea" placeholder="请输入备注信息"></textarea>
            </div>
        </div>
        <div class="layui-form-item" id="saveBtn">
            <div class="layui-input-block">
                <button class="layui-btn layui-btn-normal" lay-submit lay-filter="saveBtn" id="saveBtn1">确认保存</button>
            </div>
        </div>

        <hr>
        <div style="color: #666;margin-top: 30px;margin-bottom: 40px;padding-left: 30px;">
            <h3>说明</h3><br>
            <h4>入款到保险箱</h4>
            <p>如果需要，这里可以放一些关于产品的常见问题说明。</p>
            <br><h4>入款到现金</h4>
            <p>如果需要，这里可以放一些关于产品的常见问题说明。</p>
        </div>
    </div>
    </div>
    <script src="/lib/jquery-3.4.1/jquery.js" charset="utf-8"></script>
    <script src="/lib/layui-v2.9.2/layui.js" charset="utf-8"></script>
    <script>
        var parentMod = parent.parentMod;//全局变量，子页面获取父页面传来的参数。
        var subPageState = parent.subPageState;//全局变量，子页面状态('look','add','edit')
        layui.use(['form', 'transfer'], function () {
            var $ = layui.$;
            var form = layui.form;
            var transfer = layui.transfer;
            var layer = layui.layer;
            var apiUrl; //接口地址
            var dbs_transfer_data = []; //数据库transfer数据
            var wz_transfer_data = []; //网闸transfer数据
            var ck_transfer_data = []; //串口transfer数据
            var ckfwq_transfer_data = []; //串口服务器transfer数据

            $.ajax({
                type: 'GET',
                url: '/SourceDb/SearchAll', //接口地址
                cache: false, //是否使用缓存
                dataType: "json",//数据类型
                success: function (res) {
                    if (res.code == 0) {
                        if (res.data.length > 0) {
                            res.data.forEach(function (item) {
                                dbs_transfer_data.push({ "value": item.id, "title": item.dbDescribe });
                                wz_transfer_data.push({ "value": item.id, "title": item.dbDescribe });
                                ck_transfer_data.push({ "value": item.id, "title": item.dbDescribe });
                                ckfwq_transfer_data.push({ "value": item.id, "title": item.dbDescribe });
                            });
                        }
                    }

                    var transfer_check_data = []; //transfer选中的数据
                    if (subPageState == 'look' || subPageState == 'edit') {
                        transfer_check_data = parentMod.dbs.split(",");
                    }

                    // 初始化Transfer组件
                    transfer.render({
                        elem: '#dbs_transfer',
                        title: ['待选数据库', '已选数据库'],
                        data: dbs_transfer_data,
                        id: 'dbs_transfer',
                        value: transfer_check_data // 设置默认选中的数据，根据实际需求进行设置
                    });
                    transfer.render({
                        elem: '#wz_transfer',
                        title: ['待选网闸', '已选网闸'],
                        data: wz_transfer_data,
                        id: 'wz_transfer',
                        value: transfer_check_data // 设置默认选中的数据，根据实际需求进行设置
                    });
                    transfer.render({
                        elem: '#ck_transfer',
                        title: ['待选串口', '已选串口'],
                        data: ck_transfer_data,
                        id: 'ck_transfer',
                        value: transfer_check_data // 设置默认选中的数据，根据实际需求进行设置
                    });
                    transfer.render({
                        elem: '#ckfwq_transfer',
                        title: ['待选串口服务器', '已选串口服务器'],
                        data: ckfwq_transfer_data,
                        id: 'ckfwq_transfer',
                        value: transfer_check_data // 设置默认选中的数据，根据实际需求进行设置
                    });
                },
                error: function () {
                    layer.msg('请求接口失败');
                }
            });


            Init();//页面初始化

            //页面初始化
            function Init() {
                // InitTransferData();
                switch (subPageState) {
                    case 'look': { //查看
                        $('#saveBtn').hide();//隐藏，不占位
                        $("#cmd").val(parentMod.cmd);
                        $('#cmd').attr("disabled", true);
                        $("#taskName").val(parentMod.taskName);
                        $('#taskName').attr("disabled", true);
                        $("#taskDes").val(parentMod.taskDes);
                        $('#taskDes').attr("disabled", true);
                        $("#taskType").val(parentMod.taskType);
                        $('#taskType').attr("disabled", true);
                        $("#priorityLevel").val(parentMod.priorityLevel);
                        $('#priorityLevel').attr("disabled", true);
                        $('input[type=checkbox][name="cutType"]').each(function () {
                            var value = $(this).val();
                            var cutTypes = parentMod.cutType.split(",");
                            if (cutTypes.includes(value)) { //判断是否包含
                                $(this).prop('checked', true);
                            } else {
                                $(this).prop('checked', false);
                            }
                        });
                        $('#cutType').attr("disabled", true);
                        $('input[type=radio][name="czType"]').each(function () {
                            var value = $(this).val();
                            if (parentMod.czType == value) {
                                $(this).prop('checked', true);
                            } else {
                                $(this).prop('checked', false);
                            }
                        });
                        $('#czType').attr("disabled", true);
                        $('input[type=checkbox][name="taskState"]').prop('checked', parentMod.taskState);
                        $('#taskState').attr("disabled", true);
                        $("#delayTime").val(parentMod.delayTime);
                        $('#delayTime').attr("disabled", true);
                        $("#dbs_transfer").val(parentMod.dbs);
                        $('#dbs_transfer').attr("disabled", true);
                        $("#sqlStr").val(parentMod.sqlStr);
                        $('#sqlStr').attr("disabled", true);
                        form.render("select");
                        form.render('checkbox');
                        // $(#dbDescribe').addClass("layui-disabled").attr("disabled", true);//禁用并变灰
                    } break;
                    case 'add': { //新增
                        apiUrl = '/SubTask/Add';
                        //$('#saveBtn').show();
                    } break;
                    case 'edit': { //编辑
                        apiUrl = '/SubTask/Update';
                        $("#cmd").val(parentMod.cmd);
                        $("#taskName").val(parentMod.taskName);
                        $("#taskDes").val(parentMod.taskDes);
                        $("#taskType").val(parentMod.taskType);
                        $("#priorityLevel").val(parentMod.priorityLevel);
                        $('input[type=checkbox][name="cutType"]').each(function () {
                            var value = $(this).val();
                            var cutTypes = parentMod.cutType.split(",");
                            if (cutTypes.includes(value)) { //判断是否包含
                                $(this).prop('checked', true);
                            } else {
                                $(this).prop('checked', false);
                            }
                        });
                        $('input[type=radio][name="czType"]').each(function () {
                            var value = $(this).val();
                            if (parentMod.czType == value) {
                                $(this).prop('checked', true);
                            } else {
                                $(this).prop('checked', false);
                            }
                        });
                        $('input[type=checkbox][name="taskState"]').prop('checked', parentMod.taskState);
                        $("#delayTime").val(parentMod.delayTime);
                        $("#dbs_transfer").val(parentMod.dbs);
                        $("#sqlStr").val(parentMod.sqlStr);
                        form.render("select");
                        form.render('checkbox');
                    } break;
                    default: break;
                }


            }

            //监听提交
            form.on('submit(saveBtn)', function (data) {
                var cutTypes = ""; //存储选中的复选框值
                $('input[type=checkbox][name="cutType"]:checked').each(function () {
                    cutTypes += $(this).val() + ",";
                });
                data.field.cutType = cutTypes.substring(0, cutTypes.lastIndexOf(','));

                var idbs = ""; //存储选中的transfer
                var transfer_check_data = transfer.getData('dbs_transfer');
                transfer_check_data.forEach(function (item) {
                    idbs += item.value + ",";
                });
                data.field.dbs = idbs.substring(0, idbs.lastIndexOf(','));

                $.ajax({
                    type: 'POST',
                    url: apiUrl, //接口地址
                    cache: false, //是否使用缓存
                    dataType: "json",//数据类型
                    data: data.field,//form数据
                    success: function (res) {//函数参数 "data" 为请求成功服务端返回的数据
                        if (res.code == 0) {
                            layer.msg(res.msg);
                            layer.close(index);
                        }
                    },
                    //error: function (err) {
                    //    if (err.status == 401) {
                    //        parent.location.href = "/home/login";
                    //    }
                    //}
                });
                window.parent.location.reload();
                var iframeIndex = parent.layer.getFrameIndex(window.name);
                parent.layer.close(iframeIndex);//关闭iframe
                //parent.RefreshTable();//刷新父页面表格
                return false;
            });
        });
    </script>
</body>
</html>