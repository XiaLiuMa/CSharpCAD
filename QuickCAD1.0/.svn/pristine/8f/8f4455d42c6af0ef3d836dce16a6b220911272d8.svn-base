using Max.BaseKit.Utils;
using Max.ISolator.Core;
using Max.ISolator.RabbitMqKit;
using Max.BaseKit.Exts;
using IsolatorTarget.Storage.Entities;

namespace IsolatorTarget.Business.Services
{
    /// <summary>
    /// RabbitMq发送服务
    /// </summary>
    public class RabbitMqService
    {
        /// <summary>
        /// 消费数据
        /// </summary>
        /// <param name="idata">数据</param>
        /// <param name="task">消费任务</param>
        /// <param name="serviceId">服务标识</param>
        public void ConsumeData(IsolatorData idata, ConsumeTaskEntity task, string serviceId)
        {
            var rmq = ConfigCacher.I.RmqProduce_Lst?.Find(p => serviceId.Equals(p.Id));
            if (rmq != null)
            {
                return;
            }

            //RmqManager.Instance.Publich(lll, JsonUtil.ObjectToStr(idata));

            //try
            //{
            //    string idsStr = JsonUtil.ObjectToStr(idata);
            //    byte[] bytes = Encoding.UTF8.GetBytes(idsStr);
            //    MqManager.Instance.JavaMQ?.Send(bytes, idata.Rwmc);//发送到Java的MQ
            //}
            //catch (Exception ex)
            //{
            //    NLogger.Error($"RabbitService消费{idata.Cmd}异常{ex.Message}。");
            //}
        }
    }
}
